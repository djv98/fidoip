                           
                       ФИДО IP-комплект fidoip для Linux, FreeBSD и Windows

 	Поинткомплект fidoip состоит из скриптов для сборки  binkd, husky hpt и GoldEd+, конфигурационных файлов, а также скриптов для получения, отправки сообщений и запуска редактора GoldEd+. Настройка комплекта несложна и при осуществляется при помощи конфигуратора. ФИДО IP-комплект fidoip предназначен в основном для IP-поинтов, но при дополнительной настройке конфигурационных файлов может быть основой для ноды.
	Одной из особенностей  fidoip является мультиплаформенность, Вы с легкостью и быстро можете перейти из Windows в любой современный дистрибутив Linux, затем из Linux мигрировать в FreeBSD, и затем вернуться обратно в Windows сохраняя при этом свои настойки и базы сообщений. Кроме того, для хранения базы сообщений Вы можете использовать USB-flash диск, что позволит Вам использовать одну и туже базу сообщений на разных компьютерах и на различных операционных системах. 
	Установка и работа комплекта была проверена для дистрибутивов Slackware 12.1(с кодировками KOI8-R и UTF8), Fedora Core 8(UTF-8), OpenSUSE 10.3(UTF-8), Ubuntu Desktop(UTF-8) и Arch Linux(KOI8-R), FreeBSD 7.0(KOI8-R) и Windows XP/Vista.

        Закачать поинткомплект fidoip можно здесь: http://sourceforge.net/projects/fidoip/
        Документация на русском языке:   	   http://fidoip.wiki.sourceforge.net/ 		  

                             Описание файлов архива fidoip-1.0.1 

После того как Вы раскроете архив с fidoip-1.0.1, вы увидите следующие файлы и каталоги: 

ChangeLog                  - описание изменений и улучшений fidoip;
UPDATING	           - описание обновления fidoip до версии fidoip-1.0.1;
UPDATING.UTF	           - описание обновления fidoip до версии fidoip-1.0.1 в кодировке UTF-8;
README	                   - описание файлов архива fidoip-1.0.1;
README.UTF	           - описание файлов архива fidoip-1.0.1 в кодировке UTF-8; 
arch.abs.tar.bz2	   - архив с abs-скриптами для сборки пакетов для Arch Linux;
binkd                      - каталог со скриптами и исходниками binkd;
bsd_ports.tar.gz           - архив с обновлённых портов FreeBSD husky hpt и GoldEd+;
fido_slack.sh              - скрипт для сборки  пакетов fidoip для Slackware Linux;
fidoip_win32.zip           -  установочный комплект fidoip для Windows, архив включает исполняемые файлы,  конфигуратор, шаблоны и структуру каталогов);
fido.rus.koi               -  документация fidoip в кодировке KOI8-R 
fido.rus.utf               -  документация fidoip в кодировке UTF-8
fido.rus.win.txt           -  документация fidoip в кодировке CP1251
fido_freebsd.sh            -  скрипт для сборки и установки пакетов на OC FreeBSD; 
fido_linux_koi.sh          -  скрипт для сборки и установки fidoip для Linux, русская кодировка в которых KOI8-R;            
fido_linux_koi.64.sh       -  скрипт для сборки и установки fidoip для 64-х разрядных дистрибутивов Linux, русская кодировка в которых KOI8-R;
fido_linux_utf.sh          - скрипт для сборки и установки fidoip для Linux, русская кодировка в которых UTF-8;        
fido_linux_utf.64.sh       -  скрипт для сборки и установки fidoip для 64-х разрядных дистрибутивов Linux, русская кодировка в которых UTF-8;
golded		           -  каталог со скриптами и исходниками golded+;
husky		           -  каталог со скриптами и исходниками husky-hpt;
libiconv-1.12-i486-1as.tgz - пакет c библиотекой libiconv для Slackware Linux с кодировкой UTF-8;
relinkapps.sh              - служебный скрипт для перелинковки исполняемых файлов и библиотек fidoip;
set_perm.sh                - скрипт для установки прав на каталоги и файлы fidoip;
setup_config.bash          - конфигуратор fidoip для Linux и FreeBSD.


                       Обновление fidoip 

Если у Вас уже установлена предыдущая версия fidoip для Linux, то:
 
1.  Загрузите новую версию fidoip-1.0.1.tar и раскройте архив, и перейдите в каталог fidoip-1.0.1.

2. Под root'ом выполните команду:
   
 cat /usr/local/etc/fido/config | grep EchoArea  > arealist.save

3.  Установите поинкомплект fidoip-1.0.1 как это описано ниже;

4.  Под root'ом при помощи конфигуратора setup_config.bash настройте поинкомплект под Ваши данные;

5.  Под root'ом выполните команду:
   
 cat arealist.save >> /usr/local/etc/fido/config
 
6.  Запустите скрипт set_perm.sh login, где login - ваше имя входа.

7.  Под вашим логином откройте текстовым редактором  файл /usr/local/etc/fido/config и проверьте нет ли в конце этого в списка эхоконференций повторяюшизся описаний эх EchoArea;
 
8.  Запустите редактор и проверьте все ли эхи читаются.


		Установка поинткомплекта во FreeBSD

1. Под root'ом - подключитесь к Internet, установите(если не установлено) и обновите дерево портов /usr/ports.

2. Русифицируйте консоль для пользователя под которым Вы работаете. 
Обычно, во FreeBSD используется KOI8-R, но если Вы используете X'ы и UTF-8, то необходимо, чтобы из был установлен порт libiconv. 

3. Разархивируйте архив и перейдите в каталог fidoip-1.0.1: 

su
tar -xpf fidoip-1.0.1.tar
cd fidoip-1.0.1

Внимание! Если перед этим в системе были установлены порты husky-* и Golded+ из официального дерева портов, то сохраните Ваши конфигурационные файлы и затем удалите эти порты. Это необходимо сделать из-за того, что в поинткомплекте используются более свежие версии портов husky-* и Golded+, чем те, которые сейчас поддерживаются в дереве портов. 

4. Не отключаясь от Интернет, запустите от имени root'а скрипт fido_freebsd.sh: 
./fido_freebsd.sh login

где login - это имя пользователя под которым Вы работаете в системе.

Далее поинкомплект самостоятельно соберёт и установит все необходимые пакеты. 
На вопросы "Run binkd as user [fido]?" и "Enter group name for binkd user [fido]?" просто нажимайте Enter.

5. После завершения сборки и установки пакетов fidoip запустите для настройки поинткоплекта конфигуратор setup_config.bash:
 
/usr/local/bin/bash setup_config.bash

Конфигуратор задаст несколько вопросов о именах, паролях, адресах и явках. Затем конфигуратор выведет на экран введённую Вами информацию. Если всё было введено правильно, нажмите клавишу y, после чего конфигуратор настроит поинткомплект.

6. Затем необходимо выставить права на файлы и директории поинткомплекта. Для этого запустите скрипт set_perm.sh:

./set_perm.sh login

где login - это имя пользователя под которым Вы работаете в системе.


7. Залогинтесь под пользователем, которого Вы указали в качестве параметра login. В используемом терминале выставте шрифт побольше и сохраните эти настройки. Запустите recv - чтобы получить сообщения. Запустите скрипт ge для просмотра и редактирования сообщений, если кодировка системы KOI8-R. Если кодировка в системе UTF-8, тогда у вас имеется  на выбор три варианта запуска GoldED+: скрипт gl, ge+konsole и скрипт g, который используется запуска GoldEd+  в  программе screen. Более подробно о запуске GoldED+ см. ниже.

После того, как вы прочли и ответили на сообщения, выйдите из редактора и запустите send для отправки сообщений. 

      
               Установка поинткомплекта для Slackware Linux

 Быстрая установка поинткомплекта fidoip для дистрибутива Slackware:

1. Под root'ом - разархивируйте архив и перейдите в каталог fidoip-1.0.1: 
 
su
tar -xpf fidoip-1.0.1.tar
cd fidoip-1.0.1

2. Если кодировка системы по-умолчанию UTF-8, то установите пакет libiconv из поинткомплекта командой:

installpkg libiconv-1.12-i486-1as.tgz

Если кодировка по-умолчанию KOI8-R - тогда libiconv можно и не устанавливать.

3. Запустите скрипт fido_slack.sh:

./fido_slack.sh login

где login - это имя пользователя под которым Вы работаете в системе.

Скрипт запустит сборку пакетов поинткомплекта. 

4. После завершения процесса сборки пакетов установите их командами:

installpkg /tmp/binkd-0.9.9-i486-fido_my1.tgz
installpkg /tmp/husky-1.4.rc5-i486-fido_my1.tgz
installpkg /tmp/golded+-1.1.5-b-i486-fido_my1.tgz

5. Для настройки поинткоплекта запустите конфигуратор setup_config.bash при помощи команды:
 
./setup_config.bash

6. Конфигуратор задаст несколько вопросов о именах, паролях, адресах и явках. Затем конфигуратор выведет на экран введённую Вами информацию. Если всё было введено правильно, нажмите клавишу y, после чего конфигуратор настроит поинткомплект.

7. Затем необходимо выставить права на файлы и директории поинткомплекта. Для этого запустите скрипт set_perm.sh:

./set_perm.sh login

где login - это имя пользователя под которым Вы работаете в системе.

8. Залогинтесь под пользователем, которого Вы указали в качестве параметра login. В используемом терминале выставте шрифт побольше и сохраните эти настройки. Запустите recv - чтобы получить сообщения. Запустите скрипт ge для просмотра и редактирования сообщений, если кодировка системы KOI8-R. Если кодировка в системе UTF-8, тогда у вас имеется  на выбор три варианта запуска GoldED+: скрипт gl, ge+konsole и скрипт g, который используется запуска GoldEd+  в  программе screen. Более подробно о запуске GoldED+ см. ниже.

После того, как вы прочли и ответили на сообщения, выйдите из редактора и запустите send для отправки сообщений. 

                Установка поинткомплекта для Ubuntu Linux

1. Подключитесь к Internet, обновите список пакетов и установите необходимые для сборки поинткоплекта пакеты из репозитория:

sudo apt-get update
sudo apt-get -y install build-essential unzip zip bzip2 libncurses5-dev gettext screen xutils


2. Разархивируйте архив и перейдите в каталог fidoip-1.0.1: 
 
tar -xpf fidoip-1.0.1.tar
cd fidoip-1.0.1

3. Запустите скрипт fido_linux_utf.sh:

sudo ./fido_linux_utf.sh login

Примечание. Если у Вас установлена 64-х разрадная ОС для процессоров amd64 или Intel x86_64, то тогда Вам необходимо запустить скрипт fido_linux_utf.64.sh:

sudo ./fido_linux_utf.64.sh login

где login - это имя пользователя под которым Вы работаете в системе.

4. После завершения процесса сборки, запустите конфигуратор setup_config.bash при помощи команды:

sudo ./setup_config.bash

5. Конфигуратор задаст несколько вопросов о именах, паролях, адресах и явках. Затем конфигуратор выведет на экран введённую Вами информацию. Если всё было введено правильно, нажмите клавишу y, после чего конфигуратор настроит поинткомплект.

6. Затем необходимо выставить права на файлы и директории поинткомплекта. Для этого запустите скрипт set_perm.sh:

sudo ./set_perm.sh login

где login - это имя пользователя под которым Вы работаете в системе.

7. Откройте новую консоль или новую сессию. В используемом терминале выставьте шрифт побольше и сохраните эти настройки. Запустите recv - чтобы получить сообщения. Для запуска редактора GoldED+ используйте один из следующих скриптов gl, ge или g. Более подробно о запуске GoldED+ см. ниже.

После того, как вы прочли и ответили на сообщения, выйдите из редактора и запустите send для отправки сообщений. 

8. Для Вашего же удобства создайте комбинацию быстрых клавиш в ващей оконной среды для быстрого запуска скриптов. К примеру, чтобы редактор GoldEd в среде GNOME можно было вызывать при помощи комбинации быстрых клавиш Ctrl+Alt+g, выполните в терминале две команды:

gconftool-2 -t str --set /apps/metacity/global_keybindings/run_command_1 "<Control><Alt>g"
gconftool-2 -t str --set /apps/metacity/keybinding_commands/command_1 "konsole -e ge"


                Установка поинткомплекта для Debian Linux

1. Под root'ом - подключитесь к Internet, обновите список пакетов и установите необходимые для сборки поинткомплекта пакеты из репозитория:

su
apt-get update
apt-get -y install build-essential unzip zip bzip2 libncurses5-dev gettext xutils screen 


2. Разархивируйте архив и перейдите в каталог fidoip-1.0.1: 
 
tar -xpf fidoip-1.0.1.tar
cd fidoip-1.0.1

3. Запустите скрипт fido_linux_utf.sh:

./fido_linux_utf.sh login

где login - это имя пользователя под которым Вы работаете в системе.

Примечание. Если у Вас установлена 64-х разрадная ОС для процессоров amd64 или Intel x86_64, то тогда Вам необходимо запустить скрипт fido_linux_utf.64.sh:

./fido_linux_utf.64.sh login

4. После завершения процесса сборки, запустите конфигуратор setup_config.bash при помощи команды:

./setup_config.bash

5. Конфигуратор задаст несколько вопросов о именах, паролях, адресах и явках. Затем конфигуратор выведет на экран введённую Вами информацию. Если всё было введено правильно, нажмите клавишу y, после чего конфигуратор настроит поинткомплект.

6. Затем необходимо выставить права на файлы и директории поинткомплекта. Для этого запустите скрипт set_perm.sh:

./set_perm.sh login

где login - это имя пользователя под которым Вы работаете в системе.

7. Откройте новую консоль или новую сессию. В используемом терминале выставьте шрифт побольше и сохраните эти настройки. Запустите recv - чтобы получить сообщения.  Для запуска редактора GoldED+ используйте один из следующих скриптов gl, ge или g. Более подробно о запуске GoldED+ см. ниже.

После того, как вы прочли и ответили на сообщения, выйдите из редактора и запустите send для отправки сообщений. 

8. Для Вашего же удобства создайте комбинацию быстрых клавиш в ващей оконной среды для быстрого запуска скриптов. К примеру, чтобы редактор GoldEd в среде GNOME можно было вызывать при помощи комбинации быстрых клавиш Ctrl+Alt+g, выполните в терминале две команды:

gconftool-2 -t str --set /apps/metacity/global_keybindings/run_command_1 "<Control><Alt>g"
gconftool-2 -t str --set /apps/metacity/keybinding_commands/command_1 "konsole -e ge"

                     Установки поинткомплекта для OpenSuse

1. Установите из репозитория пакеты необходимые для сборки поинткомплекта:

su root
yast2 -i gcc gcc-c++ ncurses-devel

2. Разархивируйте архив и перейдите в каталог fidoip-1.0.1: 
 
tar -xpf fidoip-1.0.1.tar
cd fidoip-1.0.1

3. Запустите скрипт fido_linux_utf.sh:

./fido_linux_utf.sh login

где login - это имя пользователя под которым Вы работаете в системе.

Примечание. Если у Вас установлена 64-х разрадная ОС для процессоров amd64 или Intel x86_64, то тогда Вам необходимо запустить скрипт fido_linux_utf.64.sh:

./fido_linux_utf.64.sh login

4. После завершения процесса сборки, запустите конфигуратор setup_config.bash при помощи команды:

./setup_config.bash

5. Конфигуратор задаст несколько вопросов о именах, паролях, адресах и явках. Затем конфигуратор выведет на экран введённую Вами информацию. Если всё было введено правильно, нажмите клавишу y, после чего конфигуратор настроит поинткомплект.

6. Затем необходимо выставить права на файлы и директории поинткомплекта. Для этого запустите скрипт set_perm.sh:

./set_perm.sh login

где login - это имя пользователя под которым Вы работаете в системе.

7. Откройте новую консоль или новую сессию. В используемом терминале выставьте шрифт побольше и сохраните эти настройки. Запустите recv - чтобы получить сообщения.  Для запуска редактора GoldED+ используйте один из следующих скриптов gl, ge или g. Более подробно о запуске GoldED+ см. ниже.

После того, как вы прочли и ответили на сообщения, выйдите из редактора и запустите send для отправки сообщений. 

8. Для Вашего же удобства создайте комбинацию быстрых клавиш в ващей оконной среды для быстрого запуска скриптов. К примеру, чтобы редактор GoldEd в среде GNOME можно было вызывать при помощи комбинации быстрых клавиш Ctrl+Alt+g, выполните в терминале две команды:

gconftool-2 -t str --set /apps/metacity/global_keybindings/run_command_1 "<Control><Alt>g"
gconftool-2 -t str --set /apps/metacity/keybinding_commands/command_1 "konsole -e ge"

                 Установка поинткомплекта для Fedora Core 8 (кодировка по-умолчанию UTF-8):

1. Установите из репозитория пакеты, необходимые для сборки и работы поинткомплекта:

su root
yum install gcc gcc-c++ ncurses-devel screen

2. Разархивируйте архив и перейдите в каталог fidoip-1.0.1: 
 
tar -xpf fidoip-1.0.1.tar
cd fidoip-1.0.1

3. Запустите скрипт fido_linux_utf.sh:

./fido_linux_utf.sh login

где login - это имя пользователя под которым Вы работаете в системе.

Примечание. Если у Вас установлена 64-х разрадная ОС для процессоров amd64 или Intel x86_64, то тогда Вам необходимо запустить скрипт fido_linux_utf.64.sh:

./fido_linux_utf.64.sh login

4. После завершения процесса сборки, запустите конфигуратор setup_config.bash при помощи команды:

./setup_config.bash

5. Конфигуратор задаст несколько вопросов о именах, паролях, адресах и явках. Затем конфигуратор выведет на экран введённую Вами информацию. Если всё было введено правильно, нажмите клавишу y, после чего конфигуратор настроит поинткомплект.

6. Затем необходимо выставить права на файлы и директории поинткомплекта. Для этого запустите скрипт set_perm.sh:

./set_perm.sh login

где login - это имя пользователя под которым Вы работаете в системе.

7. Откройте новую консоль или новую сессию. В используемом терминале выставьте шрифт побольше и сохраните эти настройки. Запустите recv - чтобы получить сообщения.  Для запуска редактора GoldED+ используйте один из следующих скриптов gl, ge или g. Более подробно о запуске GoldED+ см. ниже.

После того, как вы прочли и ответили на сообщения, выйдите из редактора и запустите send для отправки сообщений. 

8. Для Вашего же удобства создайте комбинацию быстрых клавиш в ващей оконной среды для быстрого запуска скриптов. К примеру, чтобы редактор GoldEd в среде GNOME можно было вызывать при помощи комбинации быстрых клавиш Ctrl+Alt+g, выполните в терминале две команды:

gconftool-2 -t str --set /apps/metacity/global_keybindings/run_command_1 "<Control><Alt>g"
gconftool-2 -t str --set /apps/metacity/keybinding_commands/command_1 "konsole -e ge"




	Установка поинткомплекта для других дистрибутивов Linux с кодировкой по-умолчанию KOI8-R

1. Поверьте, установлен ли в вашей системе пакеты: библиотека ncurses(libncurses5-dev, ncurses-devel - в разных дистрибутивах она может называться по-разному) и компилятор gcc с поддержкой сборки c++. Для этого выполните поиск в системе со следующими параметрами:

find / -name ncurses.h
ind / -name gcc
find / -name g++

Если нет, то установите их из соответствующего вашей системе репозитория.

2. Разархивируйте архив и перейдите в каталог fidoip-1.0.1: 
 
tar -xpf fidoip-1.0.1.tar
cd fidoip-1.0.1

3. Запустите скрипт fido_linux_koi.sh:

./fido_linux_koi.sh login

где login - это имя пользователя под которым Вы работаете в системе.

Примечание. Если у Вас установлена 64-х разрадная ОС для процессоров amd64 или Intel x86_64, то тогда Вам необходимо запустить скрипт fido_linux_koi.64.sh:

./fido_linux_koi.64.sh login

4. После завершения процесса сборки, запустите конфигуратор setup_config.bash при помощи команды:

./setup_config.bash

5. Конфигуратор задаст несколько вопросов о именах, паролях, адресах и явках. Затем конфигуратор выведет на экран введённую Вами информацию. Если всё было введено правильно, нажмите клавишу y, после чего конфигуратор настроит поинткомплект.

6. Затем необходимо выставить права на файлы и директории поинткомплекта. Для этого запустите скрипт set_perm.sh:

./set_perm.sh login

где login - это имя пользователя под которым Вы работаете в системе.

7.  Откройте новую консоль или новую сессию с Вашим login'ом.  В используемом терминале выставьте шрифт побольше и сохраните эти настройки. Запустите recv - чтобы получить сообщения. Для запуска редактора GoldED+ используйте скрипт ge.

После того, как вы прочли и ответили на сообщения, выйдите из редактора и запустите send для отправки сообщений. 

Если при вызове скриптов recv, send и ge командный интерпретатор bash ругается, что команда не найдена, добавьте путь /usr/local/bin в переменную PATH для файла .

еdit /home/your_login/.bashrc
export PATH=$PATH:/usr/local/bin

	          Установка для систем с кодировкой по-умолчанию UTF-8

1. Поверьте, установлен ли в вашей системе пакеты: unzip, zip, bzip2, screen, luit, gettext, библиотека ncurses(libncurses5-dev, ncurses-devel - в разных дистрибутивах она может называться по-разному) и компилятор gcc с поддержкой сборки c++.
Для этого выполните поиск в системе со следующими параметрами:

find / -name ncurses.h
find / -name gcc
find / -name g++
find / -name screen
find / -name  gettext
find / -name  luit

 Если поиск по вашей системе не найдёт вышеперечисленных программ и библиотек, то установите их из соответствующего вашей системе репозитория.

2. Разархивируйте архив, перейдите в каталог и запустите  под пользователем root скрипт fido_linux_utf.sh:

./fido_linux_utf.sh login

где login - это имя пользователя под которым Вы работаете в системе.

Примечание. Если у Вас установлена 64-х разрадная ОС для процессоров amd64 или Intel x86_64, то тогда Вам необходимо запустить скрипт fido_linux_utf.64.sh:

./fido_linux_utf.64.sh login

Поинткомплект будет скомпилирован, и затем автоматически установлен.

3. Запустите конфигуратор setup_config.bash от имени root'а при помощи команды:

./setup_config.bash

4. Конфигуратор задаст несколько вопросов о именах, паролях, адресах и явках. Затем конфигуратор выведет на экран введённую Вами информацию. Если всё было введено правильно, нажмите клавишу y, после чего конфигуратор настроит поинткомплект.

5. Затем необходимо выставить права на файлы и директории поинткомплекта. Для этого также под root'ом запустите скрипт set_perm.sh:

./set_perm.sh login

где login - это имя пользователя под которым Вы работаете в системе.

6. Откройте новую консоль или новую сессию с Вашим login'ом.  В используемом терминале выставьте шрифт побольше и сохраните эти настройки. Запустите recv - чтобы получить сообщения. Для запуска редактора GoldED+ используйте один из следующих скриптов:

   gl         -  этот скрипт используется для  запуска GoldEd+  в XWindows, для преобразования кодировок  KOI8-R,<-> используется программа  luit;
   ge         - этот скрипт используется для  запуска GoldEd+  в Xwindows  в терминале konsole, для преобразования   кодировок  KOI8-R,<-> используются настройки  терминала konsole более подробно см. файл fidoip.rus.utf;
   g           - этот скрипт используется для  запуска GoldEd+  в  программе screen, которая также может осуществлять пробразование кодировок. GoldEd+ через screen может быть запущен как без установленных XWindows, в голой консоли, так и в любом терминале XWindows. Более подробно о запуске GoldED+ в программе screen см. в файле документации fidoip.rus.utf.

После того, как вы прочли и ответили на сообщения, выйдите из редактора и запустите send для отправки сообщений. 


                Установка поинткомплекта в Windows

1. Разархивируйте файл fidoip_win32.zip в корневую директорию любого диска.
Для того чтобы комплект работал, он должен находиться в корне любого диска в 2-х директориях - usr и home!
(например - d:\usr и d:\home, c:\usr и c:\home и т.д.);

2. Запустите файл \usr\setup_config.vbs, предварительно отредактировав в нём восемь строк:

const yourFullName      = "Vasiliy Pampasov"
const yourFTNAddress    = "2:5020/828.555"
const yourStationName   = "MyStation"
const yourLocation      = "Russia, Moscow"
const yourUplinkName    = "Kirill Temnenkov"
const uplinkFTNAddress  = "2:5020/828"
const uplinkServerName  = "temnenkov.dyndns.org"
const yourPassword      = "12345678"

и заменив их, соответственно, на Ваши имя, FTN-адрес, название станции, Ваше месторасположение, имя аплинка, адрес аплинка,  имя сервера и Ваш пароль;

3. Зайдите в директорию \usr\bin и щелкните мышкой на файле rs.bat. После того как вы соединитесь и получите сообщения,  запустите редактор GoldEd+ щелкнув мышкой на файле \usr\bin\ge.bat. Написав письма и закройте редактор, запустите снова скрипт rs.bat для отправки ваших сообщений;

4. Для Вашего же удобства создайте ярлыки на Рабочем столе для файлов \usr\bin\rs.bat и \usr\bin\ge.bat;

		Описание поинткомплекта fidoip и дополнительная настройка
	
	Файлы поинткомплекта во FreeBSD и Linux

Во FreeBSD все исполняемые скрипты за исключением binkd расположены в каталоге /usr/local/bin/. 
Исполняемые файлы binkd находстся в каталоге /usr/local/sbin/.

В Linux исполняемые файлы binkd, husky hpt и GoldEd+ устанавливаются в /usr/local/sbin/:
------------
binkd           fconf2binkd     fconf2na.pl    gedlnx   hptlink   linked    nlupdate          sqpack
binkd-0.9.9     fconf2fidogate  fconf2squish   gnlnx    hptsqfix  linkedto  pktinfo           tparser
fconf2aquaed    fconf2golded    fconf2tornado  hpt      hpttree   nlcrc     rddtlnx           txt2pkt
fconf2areasbbs  fconf2msged     fecfg2fconf    hptkill  htick     nldiff    requirements.txt  ulc
-----------

Если какие-то из остальные перечисленные выше файлы в этом каталоге отсутствуют - значит, поинткомплект собрался неполностью.

Все скрипты поинткомплекта расположены в /usr/local/bin/: 

recv    - скрипт для получения сообщений; 
send    - для отправки сообщений;
ge      - для запуска редактора GoldEd+ в кодировке системы KOI8-R или из терминала konsole;
gl      - для запуска редактора GoldEd+ и перекодирования UTF-8--KOI8-R при помощи программы luit; 
g       - для запуска редактора GoldEd+ и перекодирования UTF-8<->KOI8-R при помощи программы screen;
save_arealist.sh - для сохранения списка эх, используется перед обновлением поинткомплекта fidoip; 
export_arealist_to_windows.sh   - при миграции из Unix в Windows или если базы сообщений хранятся на USB-flash диске; 
import_arealist_from_windows.sh - при миграции из Windows в Unix или если базы сообщений хранятся на USB-flash диске;
nodelist.sh             - для генерации индеков нодлиста;
binkd_yesterday_stat.sh - статистика соединений binkd за последние сутки; 
binkd_weekly_stat.sh    - статистика соединений binkd за неделю; 
binkd_monthly_stat.sh   - статистика соединений binkd за месяц;
binkdstat.pl            - общая статистика соединений binkd;
stat-binkd.pl           - общая статистика соединений binkd;
hpt_info.sh             - общая статистика соединений binkd;
hpt_area.pl             - статистика husky hpt по конференциям;
linkarea_stat.sh        - статистика husky hpt по конференциям;
hpt_log.pl              - общая статистика husky hpt.

Документация binkd, husky hpt  и GoldEd, а также этот файл(fido.rus.koi или fido.rus.utf) - устанавливаются в каталог /usr/local/doc/, а необходимые для поинткомплекта библиотеки - в каталог /usr/local/lib/.
Набор каталогов для баз сообщений создаётся в /home/fido, там же находятся и логи:

-----------
badarea      binkd.log       carbonarea.sql  hpt.log     localinb     nodelist  public      uudecode
badarea.sqd  carbonarea      filebox         htick.log   magic        outbound  sqpack.log
2uplink   badarea.sqi  carbonarea.sqd  flags           import.log  msgbasedir   outfile   tempinb
announce  badarea.sql  carbonarea.sqi  golded.log      inbound     netmailarea  protinb   tempoutb
-----------

Структура каталогов и файлов, которые находятся в /home/fido в Windows, Linux и FreeBSD идентичны, поэтому Вы с легкостью можете перейти из Windows в FreeBSD или Linux, сохранив свои настроки и базы.
Кроме того, Вы можете хранить базы сообщений на USB-flash диске, что позволит Вам использовать эту флешка и поинткомплект fidoip c одной и той же базе на разных компьютерах и операционных системах.  

Вот описание предназначения некоторых из этих каталогов и файлов:

1. Каталог 2uplink используется для пересылки файлов вашему аплинку. Если Вы поместите в этот каталог какой-нибудь файл, к примеру архив, то после запуска скрипта send этот файл будет отправлен Вашему аплинку; 
2. Аналогичным образом, для приема каких-либо файлов от аплинка, к примеру nodelist'ов, в каталог filebox после запуска скрипта recv могут быть загружены файлы, которые Ваш аплинк щахочет переслать Вам;
3. Каталог announce используется htick, каким образом он используется и для чего предназначен - я не знаю, потому как файлэхами никогда не пользовался;
4. Каталог netmailarea используется для хранения личных почтовых сообщений Netmail; 
5. В файлах badarea.sqd и carbonarea.sqd хранятся потерянные сообщения и карбон-копия всех ответов на ваши сообщения. 
6. Каталоги inbound, outbound, localinb, protinb, tempinb,  tempoutb несут чисто служебную функцию и используются binkd и hpt совместно для тоссинга и отправки пакетов. 
7. В каталог uudecode вы можете экспортировать UUE-файлы из редактора GoldEd+;
8. После того как нажмёте комбинацию клавиш ALT-W Вы можете сохранять отдельные сообщения редактора GoldEd+ в каталог outfile;
9. База сообщений эхокоференций хранятся в каталоге msgbasedir.
10. В Windows каталог flags используется binkd для блокирования параллельного запуска нескольких сессий binkd; 
11. Каталоги public и magic - без понятия для чего они. Первый, вероятно, для совместного доступа к файлам, если, конечно, у Вас - нода; 
12. Файлы *.log - файлы журналирования binkd, приложений husky hpt и редактора Golded+.
  
	Файлы поинткомплекта в операционной системе Windows

Для того чтобы комплект работал в Windows, он должен находиться в корне любого диска в 2-х директориях - usr и home, например - d:\usr и d:\home или c:\usr и c:\home и т.д.. Исполняемые скрипты и программы расположены в каталоге \usr, а настройки базы сообщений в каталоге \home\fido.
Исполняемые файлы GoldEd+ находятся \usr\golded+. Исполняемые файлы binkd, husky hpt и все скрипты поинткомплекта расположены в каталоге \usr\bin. Описывать их все нет смысла - они аналогичны версии для FreeBSD и Linux. Остановимся лишь на отличиях: 

rs.bat    - скрипт для отправки и получения сообщений, в отличии от версии для FreeBSD и Windows, где для получения и отправки сообщений используются два скрипта - recv и send, в версии для Windows эти скрипты совмещены в один скрипт; 
export_windows_arealist.bat   - используется при переходе из Windows во FreeBSD/Linux и/или если базы сообщений хранятся на USB-flash диске;
unsubscribe.bat          - используется для отписки от эх; 
import_unix_arealist.bat - используется при переходе из Unix в Windows и/или если базы сообщений хранятся на USB-flash диске;
checkhpt.bat             - используется для проверки правильности конфигурации тоссера hpt; 
nodelist.bat             - используется для генерации индеков нодлиста;

Скрипты perl по статистики соединений binkd и husky hpt в Windows версии по-умолчанию отсутвуют.  

Документация binkd, husky hpt  и GoldEd, а также этот файл fido.rus.win.txt устанавливаются в \usr\doc\.

Набор каталогов для баз сообщений создаётся в \home\fido, там же находятся и логи. Структура каталогов и файлов, которые находятся в \home\fido в Windows, Linux и FreeBSD идентичны, поэтому Вы с легкостью можете перейти из Windows в FreeBSD или Linux, сохранив свои настройки и базы. Кроме того, Вы можете хранить базы сообщений на USB-flash диске, что позволит Вам использовать эту флешку и поинткомплект fidoip c одной и той же базе на разных компьютерах и операционных системах. 

         Дополнительная настройка поинткомплекта во FreeBSD и Linux

После того как Вы при помощи конфигуратора setup_config.bash настроили поинткомплект, Вы уже можете загружать сообщения, читать и отвечать на них. Тем неменее, возможно Вам потребуется изменить что-то в конфигурационных файлах, которые fidoip создал для Вас. Основные 3 конфигурационных файла настроек поинткомплекта находятся в каталоге /usr/local/etc/:
------------
/usr/local/etc/binkd.cfg       		- настройки мейлера binkd;
/usr/local/etc/fido/config     		- настройки тоссера hpt;
/usr/local/etc/golded+/golded.cfg                  - настройки редактора GoldEd+.
/usr/local/etc/
------------

Каталог шаблонов конфигурационных файлов /usr/local/etc/fidoip используется конфигуратором setup_config.bash, поэтому не нужно редактировать хранящиеся там файлы. 

            Дополнительная настройка поинткомплекта в Windows

После того как Вы при помощи конфигуратора setup_config.vbs настроили поинткомплект, Вы уже можете загружать сообщения, читать и отвечать на них. Тем неменее, возможно Вам потребуется изменить что-то в конфигурационных файлах, которые конфигуратор setup_config.vbs создал для Вас.
Настройки binkd и husky hpt в Windows расположены в каталоге \usr\fidoconf:
--------
\usr\fidoconf\binkd.cfg     - настройки мейлера binkd;
\usr\fidoconf\config.cfg    - настройки тоссера hpt;
\usr\fidoconf\fidoip        - каталог шаблонов конфигурационных файлов.
--------

Каталог шаблонов конфигурационных файлов \usr\fidoconf\fidoip используется конфигуратором setup_config.vbs, поэтому не нужно редактировать хранящиеся там файлы. 

Настройки GoldEd+ находятся в каталоге \usr\golded+.
---------
gedcolor.cfg goldcmnt.cfg  golded.cfm     golded.gew  golded.tpl    goldhelp.gew  goldlang.cfg  goldlast.lst  names.fd gedcyg.exe    golded.cfg    goldeddef.cfg  golded.msg  goldhelp.cfg  goldkeys.cfg  goldlang.gew  golduser.lst  random.sdx
---------

Описание этих файлов и дополнительная настрока редактора GoldED+ аналогична описаным ниже файлам во FreeBSD и Linux.


          Дополнительная настройка редактора GoldED+

Имеет смысл поправить TEARLINE и ORIGIN в файле /usr/local/etc/golded+/golded.cfg(во FreeBSD и Linux) или \usr\golded+\golded.cfg(в Windows), чтобы не использовать стантдартные фразы по-умолчанию.

Также в этом конфигурационном файле есть шаблоны для Twit'ов:

TwitName Bad User
TwitName Urgy Spammer

Замените Bad User и Urgy Spammer, на реальные имена тех лиц, чьи письма читать нет никакого смысла, и тогда при просмотре эхоконференций вместо текста сообщений на экране редактора будет появлятся надпись:
"Пропуск очень интересных и важных сообщений" 

Просмотр пользователькой адресной книги в редакторе - Alt-F10. Кроме того, чтобы при пролистывании имён в адресной строки при нажатии клавиши F10 GoldEd+ не ругался, что индексые нодлист недоступны, загрузите файлы net*.ndl и pnt*.ndl в каталог /home/fido/nodelist или \home\fido\nodelist файлы,  которые соответсвуют вашему региону. Затем поменяйте имена файлов net5020.ndl pnt5020.ndl в строках:

NODELIST        net5020.ndl		; NodeList  @FidoNet ZONE 2
NODELIST        pnt5020.ndl		; PointList @FidoNet 5020

и запустите скрипт /usr/local/bin/nodelist.sh или \usr\bin\nodelist.bat после чего индексые нодлисты сгеренерятся.

В каталогах /usr/local/etc/golded+/ и \usr\golded+\ находятся следующие файлы:
gedcolor.cfg          - настройки цвета редактора GoldEd+;
golded.msg            - последнее редактируемое и временное сообщение;   
goldhelp.gel          - cправка на русском языке, которая активируется по F1;
goldlast.lst          - последнее редактируемое сообщение;
cfgs                  - таблицы перекодировок CP866-KOI8-R, необходимы и для систем с UTF-8;
golded.tpl            - основной шаблон, используемый при ответах;
goldkeys.cfg          - файл для конфигурирования горячих клавиш; 
golduser.lst          - адресная книга пользователя, при каждом ответе редактор добавдяет в неё адрес получателя;
map                   - каталог с map-файлами; 
golded.cfm            - файл, используемый в качестве квитка при запросах о получении сообщения;
goldhelp.cfg	      - cправка на русском языке, которая активируется по F1;
goldlang.cfg          - файл русификации меню; 
goldxlat.gel          - файл меню. 

	Русификация во FreeBSD и Linux:

В настройку GoldEd+ уже добавлена поддержка русского языка для KOI8-R, поэтому если Ваша локаль KOI8-R, то после запуска скрипта ge Вы уже сможете читать и редактировать сообщения.
 
Если Вы используете UTF-8, то для трансляции кодировок UTF-8 <-> KOI8-R Вы можете использовать один из  трёх способов.

1.) Запуск редактора GoldEd+ можно выполнять через программу screen. Настройки screen'а для поддержки трансляции русского языка находятся в  файле .screenrc, который по умолчанию копируется в домашний каталог root'а во время установки поинткомплекта. Кроме того, чтобы перекодирование через screen работало, необходимо чтобы в системе был установен пакет libiconv.

Запустите редактор Golded+ при помощи скрипта g. 

g

Для того, чтобы переключится в режим перекодирования UTF-8-KOI8-R нажмите комбинацию клавиш Ctrl+a+e ^k. Если текст по-прежнему не читабелен по-русски, пролистайте сообщение стрелкой вниз или перейдите к следующему сообщению - и screen обновит экран, а текст по-русски станет читабелен.

Примечание. Прорисовка вертикальных, горизонтальных линий и псевдографика в GoldEd'е из под screen'а в кодировке UTF-8 может плохо выглядеть из-за того, что пакет libncurses для вашего дистрибутива собран без опции -enable-widec.

2.) Запуск редактора также можно выполнять из терминала KDE - konsole. 

Для этого, если Вы не используете KDE, установите пакет konsole из репозитория вашего дистрибутива.
Затем запустите  konsole, в меню Settings>Enconding выберите Cyrillic (koi8-r). Затем увеличьте шрифты в меню Settings>Fonts>Enlage Font и сохраните настройки выбрав в меню Settings опцию Save Settings.

После этого запустите редактор GoldED при помощи команды:

ge 

После этого Вы сможете читать и редактировать сообщения в редакторе, терминал  konsole будет автоматически транслировать кодировки  UTF-8 <-> KOI8-R.

3). Третьим способом запуска редактора,  является запуск при помощи программы luit(компонент XWindows), которая также может выполнять автоматическую трансляцию кодировок UTF-8<->KOI8-R. Для этого запустите редактор GoldED при помощи команды:

gl. 

 Проблема преобразования большой русской буквы H.

По-умолчанию, поинткомплект настроен так, что каждая русская большая буква Н(Эн) заменяется на английскую H(Эйч). Это сделано ради совместимости со старым фидошным софтом, который может при передаче сообщения порубить буквы Н(Эн).
Минусом такого решения является то, что программа проверки орфографии будет спотыкаться на каждом слове, начинающемся на Н. В принципе, если Вы абсолютно уверены, что все получатели ваших сообщений и все транзитные ноды используют современные версии фидошного софта(что пока крайне маловероятно), то Вы можете закомментировать в конфиге GoldEd+ строку EditCompletion следующим образом:

EditSoftCrXLat H
;EditCompletion "Н"  "H"
DispSoftCr Yes

 Переход из Windows в Linux/FreeBSD

1.  В ОС Windows запустите скрипт:

 \usr\bin\export_windows_arealist.bat

2.  Зархивируйте каталог \home при помощи программы WinZip или WinRar в файл home.zip.
3.  Перейдите в OC FreeBSD или Linux, скопируйте файл home.zip в ваш домашний каталог; 
4.  Установите поинткомплект fidoip как это было описано выше для FreeBSD или Linux;
5.  Под root'ом при помощи конфигуратора setup_config.bash настройте поинткомплект под Ваши данные;
6.  Удалите каталог /home/fido;
7.  Раскройте архив home.zip и скопируйте подкаталог fido из этого архива в /home/fido;
8.  Запустите скрипт set_perm.sh login, где login - ваше имя входа.
7.  Под вашим логином  - запустите скрипт:

 /usr/local/bin/import_arealist_from_windows.sh >> /usr/local/etc/fido/config


8.  Откройте текстовым редактором  файл /usr/local/etc/fido/config и проверьте нет ли в списке эхоконференций повторяющихся эх; 
9.  Запустите редактор и проверьте все ли эхи читаются.
   

 Переход из Linux/FreeBSD в Windows 

1.  Под Вашим логином В ОС FreeBSD или Linux запустите скрипт:
 
 /usr/local/bin/export_arealist_to_windows.sh

2.  Зархивируйте каталог /home/fido при помощи команды:

 zip -r home_fido.zip /home/fido;

3.  Перейдите в OC Windows, скопируйте файл home_fido.zip в корень диска; 
4.  В корень этого же диска установите поинкомплект fidoip_win32.zip для Windows как это было описано выше;
5.  Под root'ом при помощи конфигуратора setup_config.vbs настройте поинкомплект под Ваши данные;
6.  Удалите каталог \home;
7.  Зархивируйте каталог файл home_fido.zip при помощи программы WinZip или WinRar. В корне диска должен появится директория \home\fido\ с вашими базами сообщений;
8.  Запустите скрипт:

 \usr\bin\import_unix_arealist.bat;

9.  Откройте текстовым редактором  файл \usr\fidoconf\config.cfg и проверьте нет ли в списке эхоконференций повторяющихся эх; 
10.  Запустите редактор и проверьте все ли эхи читаются.


             Переход из FreeBSD в Linux и обратно. 

1.  Под Вашим логином В ОС FreeBSD или Linux запустите сл. команды:
   
 tar -cf home_fido.tar /home/fido 
 tar -cf fido_config.tar /usr/local/etc/fido/config /usr/local/etc/binkd.cfg /usr/local/etc/golded+/golded.cfg 
 
2.  Перейдите в из ОС FreeBSD в Linux или наооборот, скопируйте файлы home_fido.tar и fido_config.tar в вашу домашнюю директорию;  

3.  Под root'ом установите поинкомплект fidoip как это было описано выше для FreeBSD или Linux;
4.  Удалите каталог /home/fido;
5.  Раскройте архив home_fido.tar и скопируйте подкаталог fido из этого архива в /home/fido;
6.  Раскройте архив fido_config.tar и замените файлами из этого архива файлы /usr/local/etc/fido/config, /usr/local/etc/binkd.cfg, /usr/local/etc/golded.cfg;
7.  Если Вы  переходите из Linux во FreeBSD изментите файле /usr/local/etc/fido/config строку:

Unpack  "/usr/bin/unzip  -j -Loqq $a -d $p" 0 504b0304
на:
Unpack  "/usr/local/bin/unzip  -j -Loqq $a -d $p" 0 504b0304 

Если Вы  переходите из FreeBSD во Linux изментите файле /usr/local/etc/fido/config строку:

Unpack  "/usr/local/bin/unzip  -j -Loqq $a -d $p" 0 504b0304
на:
Unpack  "/usr/bin/unzip  -j -Loqq $a -d $p" 0 504b0304 

8.  Запустите скрипт set_perm.sh login, где login - ваше имя входа.
9.  Откройте редактор GoldEd+ и проверьте все ли эхи читаются.
 

                     Поинткомплект fidoip на USB-flash диске

Вы можете хранить базы сообщений на USB-flash диске, что позволит Вам использовать эту флешку и поинткомплект fidoip c одной и той же базе на разных компьютерах и операционных системах. 

  Во FreeBSD и Linux это можно сделать сл. образом:

1.  Установите fidoip как это описано Выше, затем настройте поинткомплект при помощи скриптов  setup_config.bash и set_perm.sh;
2.  Сохраните Вашу базу сообщений  /home/fido/ где-нибудь в другом месте. Затем затем очистите содержимое каталога /home/fido/.  Вышеописанные действия можно сделать при помощи следующих 3-х команд:

mkdir /home/login/fido/
cd /home/fido/
mv * /home/login/fido/

где /home/login. - путь к Вашей домашней директории.

3.  Вставте чистый USB-flash,  затем настройте в файле /etc/fstab точку монтирования для этого диска в каталог /home/fido сл. образом:

sudo vi /etc/fstab
 
/dev/sdb1       /home/fido	  vfat  	auto,rw,uid=1002,gid=100	0       0

где  /dev/sdb1 - логический диск FAT32(точное имя диска в Вашем случае можно узнать при помощи команды dmesg | tail ), 1002 - это  UID пользователя, под которым Вы работаете,  а 100 - номер основной GID группы, к которой принадлежит пользователь, в данном случае это группа users. Значения UID и GID Вы можете посмотреть в файле /etc/passwd.
4.  Примонтируйте USB-flash диск  при помощи команды:

 sudo mount /home/fido

5. Скопируйте ваши базы сообщений на флешку. Это можно сделать сл. cбразом:

cd /home/fido/
cp -Rp /home/your_login/fido/* .

6. Проверьте работоспособность поинткомплект при помощи команд recv, send, ge или gl;

7.  Под вашим логином - запустите скрипт:

/usr/local/bin/export_arealist_to_windows.sh

8.  Отмонтируйте флешку при помощи команды:

umount /home/fido

9. Вытащите флешку из системы с FreeBSD/Linux

10. Запустите Windows, возмите возмите из комплекта fidoip-1.0.1 архив fidoip_win32.zip и раскройте его в корень одного из разделов жесткого диска, к примеру D:\. 

11. Настройте fidoip для Windows при помощи скрипта setup_config.vbs как это описано выше. 

12. Перейдите в каталог D:\home\fido\, выделите там все файлы и каталоги, и затем удалите их;
13. Подключите USB-flash диск, затем откройте в средствах Администрирования "Управление компьютером"> "Управление дисками", подведите курсор на ваш USB-flash диск и нажмите  и щелкните на нём  правой кнопкой мыши.
14.  Снова подведите курсор на ваш USB-flash диск и нажмите  и щелкните на нём  правой кнопкой мыши и выберите в раскрывшемся меню пункт "Изменить букву диска или путь к диску";
15.  Щелкните на кнопку "Добавить";
16. Выберите "Подключить том как пусую NTFS-папку",  затем нажмите на кнопку "Обзор" и в качестве точки монтирования выберите каталог D:\home\fido;
17. Закройте "Управление компьютером" и проверьте есть ли в каталоге D:\home\fido структура каталогов fidoip;
18. Запустите скрипт:
 
 \usr\bin\import_unix_arealist.bat

19. Возможно описания некоторых арий будут дублироваться. Откройте  файл  \usr\fidoconf\config.cfg и проверьте есть ли в конце этого файла повторяющиеся описания эх. Если повторения есть, тогда удалите дубликаты описаний эх.
20.  Теперь запустите скрипты \usr\bin\rs.bat и \usr\bin\ge.bat чтобы проверить работоспособность поинткомплекта. 

Это всё! Теперь можно использовать эту флешку с Вашими фидошными базами и в операционной системе Windows и во FreeBSD/Linux. 

Если Вы сначала работали в Windows, а затем хотите использовать флешку и во FreeBSD/Linux, то скопируйте ваши базы на флешку и настройте точку подключения к пустой папке \home\fido как это описано в предыдущей инструкции в пунктах с двенадцатого по семнадцатый, затем запустите скрипт \usr\bin\export_windows_arealist.bat.
Отсоедините флешку, во FreeBSD/Linux  настройте точку монтирования  и подключите её как это описано в пунктах  три и четыре, затем запустите скрипт:

 /usr/local/bin/import_arealist_from_windows.sh >> /usr/local/etc/fido/config 

Ещё одно замечание по поводу синхронизации описаний эх. Если, к примеру, вы подписались на новую эху, получили несколько сообщений, то в конце файла конфигурации  \usr\fidoconf\config.cfg  появилась новая строка описания этой эхи. Соответственно, если Вы вставили флешку в систему, на которой уставлена FreeBSD/Linux, то в конфиге /usr/local/etc/fido/config описания этой эхи не существует, поэтому необходимо добавить описание новой эхи в конец этого файла. Проще всего это сделать следующим образом:
1. Перед отключением флешки в Windows запустите команду \usr\bin\export_windows_arealist.bat;
2. Во FreeBSD/Linux примонтируйте флешку, откройте консоль и в консоли выполните команду:

cat /home/fido/config.win | grep EchoArea | sed "s|\/home\/fido\msgbasedir\/|\\\home\\\fido\\\msgbasedir\\\|g"

3. Откройте в редакторе в файл /usr/local/etc/fido/config и вставте в конец этого файла те строки вывода команды cat, которые описывают новые базы сообщений.

Если новая эха была создана в FreeBSD/Linux, для того чтобы перетащить список эх в Windows выполните скрипт /usr/local/bin/export_arealist_to_windows.sh, затем подключите USB-flash в Windows, откройте в редакторе  "Wordpad" файл \home\fido\config.unx, скопириуйте из конца этого файла строки, которые описывают новые эхи, затем откройте файл \usr\fidoconf\config.cfg и в конце этого файла вставте эти строки.

Не забывайте правильно отсоединять флешку(в Windows это функция ?Безопасное извлечение устройства?, а в во FreeBSD/Linux команда umount), иначе базы ваших сообщений могут повредиться. Хотя бы раз в неделю выполняйте резервное копирование ваших баз, поскольку флешка всё же ненадежное устройство хранения информации. 


          	   Использование поинткомплекта fidoip в качестве ноды 

      		Скрипты для запуска демона binkd

Если Вы не поинт, и у вас нода, и Вы хотите запускать binkd в режиме демона, тогда в ОС FreeBSD необходимо добавить в файл /etc/rc.conf сл. Строки:

binkd_enable="YES"
binkd_config="/usr/local/etc/binkd.cfg"
binkd_flags="-D"
binkd_user="login"
binkd_pidfile="/var/run/binkd/binkd.pid" 

Управление запуском и остановом демона осуществляется для FreeBSD по-умолчанию, через скрипт
/usr/local/etc/rc.d/binkd


Для запуска binkd в режиме демона на Linux Вам может потребоваться один из сл. скриптов:
1. Для дистрибутивов с системой инициализации AT&T скрипт binkd/binkd.initatt-style;
2. Для дистрибутивов с системой инициализации BSD скрипт binkd/binkd.initbsd-style

При установке fidoip эти скрипты копируются в файлы /etc/init.d/binkd (AT&T) и /etc/rc.d/binkd (BSD).
Для активации демона binkd необходимо выпонить команду:
chmod +x /etc/init.d/binkd
или
chmod +x /etc/rc.d/binkd

И затем следует активировать сервис, как это принято в Вашем дистрибутиве. К примеру, в Debian/Ubuntu Вам понадибися выполнить команду:

update-rc.d -n binkd defaults

       Утилиты для отображения статистики:

Утилиты для отображения статистики binkd и husky hpt расположены в каталоге /usr/local/bin/
				

	Использованные источники информации:

Для настройки конфигурационных файлов и стартовых скриптов IP-поинткомплекта была использована статья М.С. Маликова "ФИДО поинт-станция во FreeBSD через TCP", которую можно найти по адресу:
http://bouncer.ru/dmq/freebsd_fido.html

       Использованные скрипты и поинкомплекты:

 В качестве основы для fidoip для Windows был использован поинкомплект Кирилла Темненкова(2:5020/828) файл FTN.rar для ноды 828, который доступен по адресу:

http://temnenkov.narod.ru/fido/

Я слегка изменил этот поинткоплект, обновил binkd, husky hpt и golded, чтобы его пути и каталоги соответствовали путям и каталогам fidoip. Также я взял за основу скрипт-конфигуратор install.vbs и модифицировал его так, чтобы ом мог производить настройку конфигурационных файлов fidoip для Windows не только для ноды 828, но и для остального мира.

Также хочу отдельно отметить помощь Виктора Митина(2:468/57.11), который помог мне с поиском в решения исправления падения GoldEd+ при нажатии F9, описал способ использования перекодирования UTF-KOI через konsole, а также помог в упрощении документации и создании пошаговой инструкций инсталляции fidoip для Ubutnu Linux.












